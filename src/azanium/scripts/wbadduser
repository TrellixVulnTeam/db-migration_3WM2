#!/bin/sh

wb_aws_acc="357210185381"
group="wormbase"
aws_user_group="wb-db-migration-users"
billing_policy_arn="arn:aws:iam::${wb_aws_acc}:policy/billing-deny-all"
migrator_policy_arn="arn:aws:iam::${wb_aws_acc}:policy/wb-db-migrator-assume"


# Input variables
aws_user="$1"
pub_key="$2"

if [ -z "$aws_user" ] || [ -z "$pub_key" ]; then
    echo "Usage: $0 <aws_username> \"<ssh-public-key>\""
    exit 1
fi

# Boostrap command to test a user can get their own login profile
# if they can't do this (at least), then they are not an IAM admin.
aws iam get-login-profile --user-name "${AWS_PROFILE}"

if [ $? -ne  0 ]; then
    echo  "AWS_PROFILE: ${AWS_PROFILE}"
    echo "Only AWS Adminsitartors can create new users."
    echo "Goodbye!"
    exit 255;
fi

aws iam get-user --user-name "${aws_user}"
if [ $? -ne 0 ]; then
    aws iam create-user --user-name "${aws_user}"
    aws iam wait user-exists
    aws iam add-user-to-group \
	--group-name "${aws_user_group}" \
	--user-name "${aws_user}"
    for policy_arn in "${billing_policy_arn}" "${migrator_policy_arn}"
    do
	aws iam attach-user-policy \
	    --user-name="${aws_user}" \
	    --policy-arn="${policy_arn}"
    done
fi

ssh_path="/home/${aws_user}/.ssh"
ssh_ak="${ssh_path}/authorized_keys"

sudo -- sh -c "adduser --disabled-password --gecos '' ${aws_user} > /dev/null;\
               usermod -aG ${group} ${aws_user} && \
               sleep 1 && \
	       mkdir ${ssh_path} && \
	       chmod 700 ${ssh_path} && \
	       touch ${ssh_ak} && \
	       chmod 600 ${ssh_ak} && \
               chown -R ${aws_user}:${group} ${ssh_path} && \
               echo ${pub_key} | sudo tee --append ${ssh_ak} > /dev/null && \
               echo -n 'User \"$aws_user\" has been added to group \"${group}\" and '
               echo 'has been configured for ssh access.'"
exit $?
